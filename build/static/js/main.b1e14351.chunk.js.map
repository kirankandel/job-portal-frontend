{"version":3,"sources":["components/category/CategoryItem.tsx","AxiosConfig.ts","components/skeletons/CategoryItemSkeleton.tsx","components/category/CategoryItems.tsx","components/HowItWorks.tsx","components/Footer.tsx","components/Jumbotron.tsx","store/actions/types.ts","store/reducers/authReducer.ts","history.ts","contexts/AuthContext.tsx","components/Header.tsx","components/BaseLayout.tsx","pages/HomePage.tsx","pages/JobDetailsPage.tsx","components/job/JobItem.tsx","store/reducers/jobReducer.ts","contexts/JobContext.tsx","components/skeletons/JobItemSkeleton.tsx","pages/JobsPage.tsx","components/social/GoogleSocialAuth.js","components/social/FacebookSocialAuth.js","pages/LoginPage.tsx","pages/RegisterPage.tsx","commons/EmployerPrivateRoute.tsx","pages/employer/PostJobPage.tsx","pages/employee/AppliedJobsPage.tsx","commons/EmployeePrivateRoute.tsx","pages/employee/EditProfilePage.tsx","components/employer-dashboard/EmployerSidebarLayout.tsx","pages/employer/DashboardPage.tsx","pages/employer/ApplicantsPage.tsx","components/modals/AcceptRejectModal.tsx","pages/employer/ApplicantsPerJobPage.tsx","routes.tsx","App.tsx","serviceWorker.js","i18next.js","index.tsx"],"names":["CategoryItem","category","index","classes","className","href","icon","name","total_jobs","AxiosConfig","axios","create","baseURL","CategoryItemSkeleton","props","circle","height","width","CategoryItems","useState","categories","setCategories","loading","setLoading","useEffect","a","get","res","data","console","log","fetchCategories","then","Array","fill","map","_","HowItWorks","Footer","Jumbotron","t","useTranslation","type","placeholder","value","src","alt","ActionTypes","LOGIN","LOGOUT","ALL_JOBS","authReducer","state","action","localStorage","removeItem","setItem","JSON","stringify","payload","user","token","refreshToken","isAuthenticated","isLoading","history","createBrowserHistory","jwtToken","getItem","excluded_routes","parse","decoded","jwt_decode","moment","unix","exp","format","clear","includes","location","pathname","push","initialInfo","AuthContext","createContext","authDispatch","AuthContextProvider","useReducer","Provider","children","Header","i18n","redirect","setRedirect","authContext","useContext","handleLogout","to","id","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","style","fontWeight","activeClassName","Fragment","role","aria-haspopup","first_name","last_name","onClick","cursor","changeLanguage","data-logo","window","BaseLayout","title","Helmet","HomePage","swal","require","JobDetailsPage","Object","job","setJob","isApplied","setIsApplied","useParams","useHistory","getJobDetails","config","headers","Authorization","is_applied","company_name","created_at","salary","description","e","preventDefault","text","buttons","dangerMode","apply","post","err","allowFullScreen","method","required","JobItem","n","Math","floor","random","randomIntFromInterval","String","toLowerCase","replace","get_type","job_tags","tag","color","backgroundColor","jobReducer","jobs","catch","JobContext","jobState","jobDispatch","JobContextProvider","JobItemSkeleton","JobsPage","setJobs","setError","length","GoogleSocialAuth","googleResponse","response","postData","accessToken","jwtDecode","access","refresh","clientId","process","REACT_APP_GOOGLE_CLIENT_ID","buttonText","onSuccess","onFailure","FacebookSocialAuth","textButton","appId","fields","callback","useToasts","LoginPage","email","setEmail","password","setPassword","submitted","setSubmitted","addToast","_isMounted","useRef","current","onSubmit","evt","alert","appearance","autoDismiss","status","loginUser","onChange","target","htmlFor","hidden","aria-hidden","RegisterPage","setName","password2","setPassword2","gender","setGender","contactNumber","setContactNumber","setRole","defaultValue","EmployerPrivateRoute","Component","component","rest","render","PostJobPage","tags","setTags","types","setTitle","setDescription","setSalary","setJobTags","setLocation","setType","setCategory","last_date","setLastDate","setCompanyName","company_description","setCompanyDescription","website","setWebsite","my_tags","forEach","animatedComponents","makeAnimated","visible","new_job_data","event","rows","Number","closeMenuOnSelect","components","isMulti","options","classNamePrefix","selectedOptions","selected","Date","date","ClapSpinner","LoadingStyle","styled","div","AppliedJobsPage","filtered_jobs","setFilteredJobs","setStatus","toString","filtered_jobs2","filter","applicant","setTimeout","size","filled","EmployeePrivateRoute","EditProfilePage","setFirstName","setLastName","put","finally","EmployerSidebarLayout","getActiveClass","url","DashboardPage","fetchJobs","total_candidates","ApplicantsPage","applicants","setApplicants","fetchApplicants","applied_user","AcceptRejectModal","show","onHide","comment","setComment","variant","Modal","aria-labelledby","centered","closeButton","Title","status_id","updateApplicantStatus","Body","Button","ApplicantsPerJobPage","match","acceptModalShow","setAcceptModalShow","setApplicant","job_id","params","onUpdateApplicant","BaseRouter","path","App","Boolean","hostname","resources","en","common","common_en","employee","np","common_np","employee_np","ToastProvider","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","ns","defaultNS","ReactDOM","autoDismissTimeout","fallback","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1e14351.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport React, { FC } from \"react\";\r\nimport { ICategory } from \"../../interfaces\";\r\n\r\ninterface Props {\r\n    category: ICategory\r\n    index: number\r\n}\r\n\r\nconst CategoryItem: FC<Props> = ({category, index}) => {\r\n    let classes = `icon bg-color-${index + 1}`\r\n    return (\r\n        <div className=\"col-lg-4 col-md-6 col-xs-12 f-category\">\r\n            <a href=\"#\">\r\n                <div className={classes}>\r\n                    <i className={category.icon}/>\r\n                </div>\r\n                <h3>{category.name}</h3>\r\n                <p>({category.total_jobs} jobs)</p>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryItem;\r\n","import axios from \"axios\";\r\n\r\nconst AxiosConfig = axios.create({\r\n    baseURL: \"/api/\"\r\n});\r\n\r\nexport default AxiosConfig;\r\n","/* eslint-disable */\r\nimport React, { FC } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CategoryItemSkeleton: FC<any> = (props: any) => {\r\n    return (\r\n        <div className=\"col-lg-4 col-md-6 col-xs-12 f-category\">\r\n            <a href=\"#\">\r\n                <div className=\"icon\">\r\n                    <Skeleton circle={true} height={50} width={50}/>\r\n                </div>\r\n                <h3>\r\n                    <Skeleton height={10}/>\r\n                </h3>\r\n                <p>\r\n                    <Skeleton height={10}/>\r\n                </p>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryItemSkeleton;\r\n","/* eslint-disable */\r\nimport React, {useEffect, useState} from \"react\";\r\nimport CategoryItem from \"./CategoryItem\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\nimport CategoryItemSkeleton from \"../skeletons/CategoryItemSkeleton\";\r\nimport { ICategory } from \"../../interfaces\";\r\n\r\nconst CategoryItems = () => {\r\n    // const [categories, setCategories] = useState([\r\n    //     {\r\n    //         name: \"Web design\",\r\n    //         slug: \"web-design\",\r\n    //         icon: \"lni-brush\"\r\n    //     },\r\n    //     {\r\n    //         name: \"Graphic design\",\r\n    //         slug: \"graphic-design\",\r\n    //         icon: \"lni-heart\"\r\n    //     },\r\n    //     {\r\n    //         name: \"Web development\",\r\n    //         slug: \"web-development\",\r\n    //         icon: \"lni-funnel\"\r\n    //     },\r\n    //     {\r\n    //         name: \"Human Resource\",\r\n    //         slug: \"human-resource\",\r\n    //         icon: \"lni-cup\"\r\n    //     },\r\n    //     {\r\n    //         name: \"Support\",\r\n    //         slug: \"support\",\r\n    //         icon: \"lni-home\"\r\n    //     },\r\n    //     {\r\n    //         name: \"Android Development\",\r\n    //         slug: \"android\",\r\n    //         icon: \"lni-world\"\r\n    //     }\r\n    // ]);\r\n\r\n    const [categories, setCategories] = useState<ICategory[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const res = await AxiosConfig.get(\"categories/\");\r\n                setCategories(res.data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCategories().then();\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"category section bg-gray\">\r\n            <div className=\"container\">\r\n                <div className=\"section-header\">\r\n                    <h2 className=\"section-title\">Browse Categories</h2>\r\n                    <p>Most popular categories of portal, sorted by popularity</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {\r\n                        loading && (\r\n                            Array(6)\r\n                                .fill(0)\r\n                                .map((_, index) => (\r\n                                    <CategoryItemSkeleton key={index}/>\r\n                                ))\r\n                        )\r\n                    }\r\n                    {\r\n                        !loading &&\r\n                        categories.map((category, index) => (\r\n                            <CategoryItem category={category} index={index} key={category.name}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default CategoryItems;\r\n","import React, { FC } from \"react\";\r\n\r\nconst HowItWorks: FC = () => {\r\n    return (\r\n        <section className=\"how-it-works section\">\r\n            <div className=\"container\">\r\n                <div className=\"section-header\">\r\n                    <h2 className=\"section-title\">How It Works?</h2>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit ellentesque dignissim quam et <br/> metus\r\n                        effici turac fringilla lorem facilisis.</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\">\r\n                        <div className=\"work-process\">\r\n                        <span className=\"process-icon\">\r\n                            <i className=\"lni-user\"/>\r\n                        </span>\r\n                            <h4>Create an Account</h4>\r\n                            <p>Post a job to tell us about your project. We'll quickly match you with the right freelancers\r\n                                find place best.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\">\r\n                        <div className=\"work-process step-2\">\r\n                        <span className=\"process-icon\">\r\n                            <i className=\"lni-search\"/>\r\n                        </span>\r\n                            <h4>Search Jobs</h4>\r\n                            <p>Post a job to tell us about your project. We'll quickly match you with the right freelancers\r\n                                find place best.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\">\r\n                        <div className=\"work-process step-3\">\r\n                        <span className=\"process-icon\">\r\n                            <i className=\"lni-cup\"/>\r\n                        </span>\r\n                            <h4>Apply</h4>\r\n                            <p>Post a job to tell us about your project. We'll quickly match you with the right freelancers\r\n                                find place best.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HowItWorks;","/* eslint-disable */\r\nimport React, { FC } from 'react';\r\n\r\nconst Footer: FC = () => {\r\n    return (\r\n        <footer>\r\n            <section className=\"footer-Content\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                            <div className=\"widget\">\r\n                                <div className=\"footer-logo\">All Rights Reserved</div>\r\n                                <div className=\"textwidget\">\r\n                                    <p>JobFinder. </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-xs-12\">\r\n                            <div className=\"widget\">\r\n                                <h3 className=\"block-title\">Quick Links</h3>\r\n                                <ul className=\"menu\">\r\n                                    <li><a href=\"#\">About Us</a></li>\r\n                                    <li><a href=\"#\">Support</a></li>\r\n                                    <li><a href=\"#\">Contact</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-4 col-xs-12\">\r\n                            <div className=\"widget\">\r\n                                <ul className=\"mt-3 footer-social\">\r\n                                    <li><a className=\"facebook\" href=\"#\"><i className=\"lni-facebook-filled\"/></a></li>\r\n                                    <li><a className=\"twitter\" href=\"#\"><i className=\"lni-twitter-filled\"/></a></li>\r\n                                    <li><a className=\"linkedin\" href=\"#\"><i className=\"lni-linkedin-fill\"/></a></li>\r\n                                    <li><a className=\"google-plus\" href=\"#\"><i className=\"lni-google-plus\"/></a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { FC } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Jumbotron: FC = () => {\r\n    const {t} = useTranslation();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row space-100\">\r\n                <div className=\"col-lg-7 col-md-12 col-xs-12\">\r\n                    <div className=\"contents\">\r\n                        <h2 className=\"head-title\">{t('welcome.title1')} <br/> {t('welcome.title2')}</h2>\r\n                        <p>Aliquam vestibulum cursus felis. In iaculis iaculis sapien ac condimentum. Vestibulum congue posuere lacus, id\r\n                            tincidunt nisi porta sit amet. Suspendisse et sapien varius, pellentesque dui non.</p>\r\n                        <div className=\"job-search-form\">\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-5 col-md-5 col-xs-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Job Title or Company Name\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-5 col-md-5 col-xs-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"search-category-container\">\r\n                                                <label className=\"styled-select\">\r\n                                                    <select>\r\n                                                        <option value=\"none\">Locations</option>\r\n                                                        <option value=\"none\">New York</option>\r\n                                                        <option value=\"none\">California</option>\r\n                                                        <option value=\"none\">Washington</option>\r\n                                                        <option value=\"none\">Birmingham</option>\r\n                                                        <option value=\"none\">Chicago</option>\r\n                                                        <option value=\"none\">Phoenix</option>\r\n                                                    </select>\r\n                                                </label>\r\n                                            </div>\r\n                                            <i className=\"lni-map-marker\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                        <button type=\"submit\" className=\"button\"><i className=\"lni-search\"/></button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-5 col-md-12 col-xs-12\">\r\n                    <div className=\"intro-img\">\r\n                        <img src=\"assets/img/intro.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","export interface IActionTypes {\r\n    LOGIN: string,\r\n    LOGOUT: string,\r\n    ALL_JOBS: string,\r\n}\r\n\r\nexport const ActionTypes: IActionTypes = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\",\r\n    ALL_JOBS: \"ALL_JOBS\",\r\n}","import { ActionTypes } from \"../actions/types\";\r\n\r\nconst authReducer = (state: any, action: any) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN:\r\n            localStorage.removeItem('user');\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('refreshToken');\r\n            localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\r\n            localStorage.setItem(\"token\", action.payload.token);\r\n            localStorage.setItem(\"refreshToken\", action.payload.refreshToken);\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                refreshToken: action.payload.refreshToken,\r\n                isLoading: false\r\n            };\r\n        case ActionTypes.LOGOUT:\r\n            localStorage.removeItem('user');\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('refreshToken');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                token: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory()\r\nexport default history;","/* eslint-disable */\r\nimport React, { createContext, ReactNode, useReducer } from \"react\";\r\nimport authReducer from \"../store/reducers/authReducer\";\r\nimport { ActionTypes, IActionTypes } from \"../store/actions/types\";\r\nimport history from \"../history\";\r\nimport moment from \"moment\";\r\nimport jwt_decode, { JwtPayload } from \"jwt-decode\";\r\n\r\nlet jwtToken = localStorage.getItem(\"token\");\r\nlet refreshToken = localStorage.getItem(\"refreshToken\");\r\nlet user = JSON.parse(localStorage.getItem(\"user\") || '{}');\r\n\r\nconst excluded_routes = ['/login', '/register', '/jobs']\r\n\r\ninterface IJwtPayload extends JwtPayload {\r\n    user?: any;\r\n}\r\n\r\nlet decoded: IJwtPayload = {};\r\n\r\nif (jwtToken && jwtToken !== 'undefined') {\r\n    decoded = jwt_decode<IJwtPayload>(jwtToken);\r\n    if (moment.unix(decoded.exp!).format() < moment().format()) {\r\n        localStorage.clear();\r\n        if (!excluded_routes.includes(history.location.pathname)) history.push('/');\r\n    }\r\n} else {\r\n    if (!excluded_routes.includes(history.location.pathname)) history.push('/');\r\n}\r\n\r\ninterface initialState {\r\n    isAuthenticated: boolean,\r\n    user: any,\r\n    token: string | null,\r\n    refreshToken: string | null,\r\n    isLoading: false,\r\n}\r\n\r\nconst initialInfo: initialState = {\r\n    isAuthenticated: !!decoded.user,\r\n    user: decoded.user,\r\n    token: jwtToken,\r\n    refreshToken: refreshToken,\r\n    isLoading: false,\r\n};\r\n\r\nexport const AuthContext = createContext<{ state: initialState, authDispatch: React.Dispatch<any>, ActionTypes: IActionTypes }>({\r\n    state: initialInfo,\r\n    authDispatch: () => null,\r\n    ActionTypes: ActionTypes\r\n});\r\n\r\ntype contextProps = {\r\n    children: ReactNode\r\n}\r\n\r\nexport const AuthContextProvider = (props: contextProps) => {\r\n    const [state, authDispatch] = useReducer(authReducer, initialInfo);\r\n\r\n    return (\r\n        <AuthContext.Provider value={\r\n            {\r\n                state, authDispatch, ActionTypes\r\n            }\r\n        }>\r\n            {\r\n                props.children\r\n            }\r\n        </AuthContext.Provider>\r\n    )\r\n}","/* eslint-disable */\r\nimport React, { FC, useContext, useState } from \"react\";\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Jumbotron from \"./Jumbotron\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Header: FC = () => {\r\n\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const authContext = useContext(AuthContext);\r\n    const {isAuthenticated, user} = authContext.state;\r\n\r\n    const handleLogout = () => {\r\n        authContext.authDispatch({\r\n            type: authContext.ActionTypes.LOGOUT,\r\n            payload: {},\r\n        });\r\n\r\n        setRedirect(true);\r\n    }\r\n\r\n    const getFullName = () => {\r\n        return `${user.first_name} ${user.last_name}`;\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n\r\n    return (\r\n        <header id=\"home\" className=\"hero-area\">\r\n\r\n            <nav className=\"navbar navbar-expand-lg fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <div className=\"theme-header clearfix\">\r\n                        <div className=\"navbar-header\">\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#main-navbar\"\r\n                                    aria-controls=\"main-navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"/>\r\n                                <span className=\"lni-menu\"/>\r\n                                <span className=\"lni-menu\"/>\r\n                                <span className=\"lni-menu\"/>\r\n                            </button>\r\n                            <NavLink exact className='navbar-brand' style={{fontWeight: 'bold'}} to='/'>JobFinder. </NavLink>\r\n                        </div>\r\n                        <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\r\n                            <ul className=\"navbar-nav mr-auto w-100 justify-content-end\">\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink exact className='nav-link' activeClassName='' to='/'>Home</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink exact className='nav-link' activeClassName='' to='/jobs'>Jobs</NavLink>\r\n                                </li>\r\n                                {\r\n                                    !isAuthenticated && (\r\n                                        <React.Fragment>\r\n                                            <li className=\"nav-item\">\r\n                                                <NavLink exact className='nav-link' activeClassName='' to='/login'>Login</NavLink>\r\n                                            </li>\r\n                                            <li className=\"nav-item\">\r\n                                                <NavLink exact className='nav-link' activeClassName='' to='/register'>Register</NavLink>\r\n                                            </li>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    isAuthenticated && user.role === 'employee' && (\r\n                                        <>\r\n                                            <li className=\"nav-item dropdown\">\r\n                                                <a className=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                                   aria-expanded=\"false\">\r\n                                                    Candidates\r\n                                                </a>\r\n                                                <ul className=\"dropdown-menu\">\r\n                                                    <li>\r\n                                                        <NavLink exact className=\"dropdown-item\" activeClassName='' to='/applied-jobs'>Applied\r\n                                                            jobs</NavLink>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li className=\"nav-item dropdown\">\r\n                                                <a className=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                                   aria-expanded=\"false\">\r\n                                                    {getFullName()}\r\n                                                </a>\r\n                                                <ul className=\"dropdown-menu\">\r\n                                                    <li>\r\n                                                        <NavLink exact className=\"dropdown-item\" activeClassName='' to='/edit-profile'>Edit\r\n                                                            Profile</NavLink>\r\n                                                    </li>\r\n                                                    <li onClick={handleLogout} style={{cursor: 'pointer'}}>\r\n                                                        <a className='dropdown-item'>Logout</a>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    isAuthenticated && user.role === \"employer\" && (\r\n                                        <li className=\"nav-item dropdown\">\r\n                                            <a className=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                               aria-expanded=\"false\">\r\n                                                Employers\r\n                                            </a>\r\n                                            <ul className=\"dropdown-menu\">\r\n                                                <li>\r\n                                                    <NavLink exact className=\"dropdown-item\" activeClassName=''\r\n                                                             to='/employer/dashboard/'>Dashboard</NavLink>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <NavLink exact className=\"dropdown-item\" activeClassName=''\r\n                                                             to='/employer/applicants/'>Applicants</NavLink>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <NavLink exact className=\"dropdown-item\" activeClassName='' to='/post-job'>Post a\r\n                                                        Job</NavLink>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </li>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    isAuthenticated && user.role === \"employer\" && (\r\n                                        <li className=\"nav-item\" onClick={handleLogout} style={{cursor: 'pointer'}}>\r\n                                            <a className='nav-link'>Logout</a>\r\n                                        </li>\r\n                                    )\r\n                                }\r\n                                <li className=\"button-group\">\r\n                                    <NavLink className=\"button btn btn-common\" activeClassName='' to='/post-job/'>Post a Job</NavLink>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item dropdown\">\r\n                                    <a className=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                       aria-expanded=\"false\">\r\n                                        Language\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu\">\r\n                                        <li style={{cursor: 'pointer'}}>\r\n                                            <a className=\"dropdown-item\" onClick={() => i18n.changeLanguage(\"en\")}>English</a>\r\n                                        </li>\r\n                                        <li style={{cursor: 'pointer'}}>\r\n                                            <a className=\"dropdown-item\" onClick={() => i18n.changeLanguage(\"np\")}>Nepali</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mobile-menu\" data-logo=\"assets/img/logo-mobile.png\"/>\r\n            </nav>\r\n            {\r\n                ['/'].includes(window.location.pathname) ? (\r\n                    <Jumbotron/>\r\n                ) : ''\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","/* eslint-disable */\r\nimport React, { FC } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface Props {\r\n    children: React.ReactNode\r\n    title: string | undefined\r\n}\r\n\r\nconst BaseLayout: FC<Props> = ({children, title}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Helmet>\r\n                <title>{title}</title>\r\n            </Helmet>\r\n\r\n            {children}\r\n\r\n            <Footer/>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default BaseLayout;","/* eslint-disable */\r\nimport React, { FC } from \"react\";\r\nimport CategoryItems from \"../components/category/CategoryItems\";\r\nimport HowItWorks from \"../components/HowItWorks\";\r\nimport BaseLayout from \"../components/BaseLayout\";\r\n\r\nconst HomePage: FC = () => {\r\n    return (\r\n        <BaseLayout title={'Home'}>\r\n            <CategoryItems/>\r\n\r\n            <HowItWorks/>\r\n        </BaseLayout>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport AxiosConfig from \"../AxiosConfig\";\r\nimport moment from \"moment\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\r\nimport Header from \"../components/Header\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\n\r\nimport { IJob } from \"../interfaces\";\r\n\r\nconst swal = require('sweetalert');\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst JobDetailsPage = (props: Props) => {\r\n    const [job, setJob] = useState<IJob>(Object);\r\n    const [isApplied, setIsApplied] = useState(false);\r\n    let {id} = useParams<{ id: string | undefined }>();\r\n    const authContext = useContext(AuthContext);\r\n    const {token, isAuthenticated} = authContext.state;\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getJobDetails().then();\r\n    }, []);\r\n\r\n    const getJobDetails = async () => {\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n\r\n        const {data} = await AxiosConfig.get(`jobs/${id}/`).then(res => res);\r\n\r\n        setJob(data);\r\n\r\n        if (isAuthenticated) {\r\n            const {data} = await AxiosConfig.get(`applied-for-job/${id}/`, config).then(res => res);\r\n\r\n            setIsApplied(data.is_applied);\r\n        }\r\n    }\r\n\r\n    const applyJobHandle: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.preventDefault();\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n        if (isAuthenticated) {\r\n            swal({\r\n                title: \"Are you sure?\",\r\n                text: \"Once applied, you will not be able to remove it!\",\r\n                icon: \"warning\",\r\n                buttons: true,\r\n                dangerMode: true,\r\n            })\r\n                .then((apply: boolean) => {\r\n                    if (apply) {\r\n\r\n                        AxiosConfig.post(`apply-job/${id}/`, {'job': id}, config)\r\n                            .then(res => {\r\n                                setIsApplied(true);\r\n                                swal(\"Successfully applied for this position\", {\r\n                                    icon: \"success\",\r\n                                });\r\n                            })\r\n                            .then(err => {\r\n                                swal(err, {\r\n                                    icon: \"error\",\r\n                                });\r\n                            })\r\n                    }\r\n                });\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Helmet>\r\n                <title>Job details</title>\r\n            </Helmet>\r\n\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-6 col-xs-12\">\r\n                            <div className=\"breadcrumb-wrapper\">\r\n                                <div className=\"img-wrapper\">\r\n                                    <img src=\"/assets/img/about/company-logo.png\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <h3 className=\"product-title\">{job.title}</h3>\r\n                                    <p className=\"brand\">{job.company_name}</p>\r\n                                    <div className=\"tags\">\r\n                                        <span><i className=\"lni-map-marker\"/> {job.location}</span>\r\n                                        <span><i className=\"lni-calendar\"/> Posted {moment(job.created_at).format('MM-DD-YY')}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-xs-12\">\r\n                            <div className=\"month-price\">\r\n                                <span className=\"year\">Monthly</span>\r\n                                <div className=\"price\">{job.salary} Tk</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <section className=\"job-detail section\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-lg-8 col-md-12 col-xs-12\">\r\n                            <div className=\"content-area\">\r\n                                <h4>Job Description</h4>\r\n                                <p>{job.description}</p>\r\n                                {/* <h5>What You Need for this Position</h5>\r\n                                <ul>\r\n                                    <li>- Objective-C</li>\r\n                                    <li>- iOS SDK</li>\r\n                                    <li>- XCode</li>\r\n                                    <li>- Cocoa</li>\r\n                                    <li>- ClojureScript</li>\r\n                                </ul> */}\r\n                                {\r\n                                    !isApplied &&\r\n                                    (\r\n                                        <>\r\n                                            <h5>How To Apply</h5>\r\n                                            <p>Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor,\r\n                                                nisi elit consequat ipsum, nec sagittis sem nibh id elit. Duis sed odio sit amet nibh\r\n                                                vulputate cursus a sit amet mauris.</p>\r\n                                            <button onClick={applyJobHandle} className=\"btn btn-common\">Apply job</button>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    isApplied &&\r\n                                    (\r\n                                        <a href=\"#!\" className=\"btn btn-primary\">Already applied</a>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-12 col-xs-12\">\r\n                            <div className=\"sideber\">\r\n                                <div className=\"widghet\">\r\n                                    <h3>Job Location</h3>\r\n                                    <div className=\"maps\">\r\n                                        <div id=\"map\" className=\"map-full\">\r\n                                            <iframe\r\n                                                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d405691.57240383344!2d-122.3212843181106!3d37.40247298383319!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x808fb68ad0cfc739%3A0x7eb356b66bd4b50e!2sSilicon+Valley%2C+CA%2C+USA!5e0!3m2!1sen!2sbd!4v1538319316724\"\r\n                                                allowFullScreen={true}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"widghet\">\r\n                                    <h3>Share This Job</h3>\r\n                                    <div className=\"share-job\">\r\n                                        <form method=\"post\" className=\"subscribe-form\">\r\n                                            <div className=\"form-group\">\r\n                                                <input type=\"email\" name=\"Email\" className=\"form-control\"\r\n                                                       placeholder={window.location.href} required={true}/>\r\n                                                <button type=\"submit\" name=\"subscribe\" className=\"btn btn-common sub-btn\">\r\n                                                    <i className=\"lni-files\"/>\r\n                                                </button>\r\n                                                <div className=\"clearfix\"/>\r\n                                            </div>\r\n                                        </form>\r\n                                        <ul className=\"mt-4 footer-social\">\r\n                                            <li><a className=\"facebook\" href=\"#\"><i className=\"lni-facebook-filled\"/></a></li>\r\n                                            <li><a className=\"twitter\" href=\"#\"><i className=\"lni-twitter-filled\"/></a></li>\r\n                                            <li><a className=\"linkedin\" href=\"#\"><i className=\"lni-linkedin-fill\"/></a></li>\r\n                                            <li><a className=\"google-plus\" href=\"#\"><i className=\"lni-google-plus\"/></a></li>\r\n                                        </ul>\r\n                                        <div className=\"meta-tag\">\r\n                                            <span className=\"meta-part\"><a href=\"#\"><i className=\"lni-star\"/> Write a\r\n                                            Review</a></span>\r\n                                            <span className=\"meta-part\"><a href=\"#\"><i className=\"lni-warning\"/> Reports</a></span>\r\n                                            <span className=\"meta-part\"><a href=\"#\"><i className=\"lni-share\"/> Share</a></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <section id=\"featured\" className=\"section bg-gray pb-45\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"small-title text-left\">Similar Jobs</h4>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6 col-xs-12\">\r\n                            <div className=\"job-featured\">\r\n                                <div className=\"icon\">\r\n                                    <img src=\"assets/img/features/img1.png\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <h3><a href=\"job-page.html\">Software Engineer</a></h3>\r\n                                    <p className=\"brand\">MizTech</p>\r\n                                    <div className=\"tags\">\r\n                                        <span><i className=\"lni-map-marker\"/> New York</span>\r\n                                        <span><i className=\"lni-user\"/>John Smith</span>\r\n                                    </div>\r\n                                    <span className=\"full-time\">Full Time</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-xs-12\">\r\n                            <div className=\"job-featured\">\r\n                                <div className=\"icon\">\r\n                                    <img src=\"assets/img/features/img2.png\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <h3><a href=\"job-page.html\">Graphic Designer</a></h3>\r\n                                    <p className=\"brand\">Hunter Inc.</p>\r\n                                    <div className=\"tags\">\r\n                                        <span><i className=\"lni-map-marker\"/> New York</span>\r\n                                        <span><i className=\"lni-user\"/>John Smith</span>\r\n                                    </div>\r\n                                    <span className=\"part-time\">Part Time</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-xs-12\">\r\n                            <div className=\"job-featured\">\r\n                                <div className=\"icon\">\r\n                                    <img src=\"assets/img/features/img3.png\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <h3><a href=\"job-page.html\">Managing Director</a></h3>\r\n                                    <p className=\"brand\">MagNews</p>\r\n                                    <div className=\"tags\">\r\n                                        <span><i className=\"lni-map-marker\"/> New York</span>\r\n                                        <span><i className=\"lni-user\"/>John Smith</span>\r\n                                    </div>\r\n                                    <span className=\"full-time\">Full Time</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default JobDetailsPage;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IJob } from \"../../interfaces\";\r\n\r\nconst JobItem = ({job}: { job: IJob }) => {\r\n    const randomIntFromInterval = () => {\r\n        let n = Math.floor(Math.random() * 6 + 1);\r\n        return `assets/img/features/img${n}.png`;\r\n    }\r\n\r\n    const get_type = (type: string) => {\r\n        const types: any = {\r\n            \"1\": \"Full Time\",\r\n            \"2\": \"Part Time\",\r\n            \"3\": \"Internship\",\r\n        }\r\n        return types[type];\r\n    }\r\n\r\n    const get_class = (type: string) => {\r\n        const class_name: any = {\r\n            \"1\": \"Full Time\",\r\n            \"2\": \"Part Time\",\r\n            \"3\": \"Internship\",\r\n        }[type];\r\n\r\n        return class_name.toLowerCase()\r\n            .replace(/ /g, '-')\r\n            .replace(/[^\\w-]+/g, '');\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-lg-4 col-md-6 col-xs-12\">\r\n            <div className=\"job-featured\">\r\n                <div className=\"icon\">\r\n                    <img src={randomIntFromInterval()} alt=\"\"/>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h3>\r\n                        <Link to={`/jobs/${job.id}`}>{job.title}</Link>\r\n                    </h3>\r\n                    <p className=\"brand\">{job.company_name}</p>\r\n                    <div className=\"tags\">\r\n                        <span><i className=\"lni-map-marker\"/> {job.location}</span>\r\n                        <br/>\r\n                        <span><i className=\"lni-user\"/>{job.company_name}</span>\r\n                    </div>\r\n                    <span className={get_class(String(job.type))}>{get_type(String(job.type))}</span>\r\n                    <br/>\r\n                    <br/>\r\n                    Tags:\r\n                    {\r\n                        job.job_tags?.map(tag => {\r\n                            return (\r\n                                <span key={tag.id} className=\"full-time\" style={{color: '#fff', backgroundColor: '#000'}}>{tag.name}</span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobItem;\r\n","import { ActionTypes } from \"../actions/types\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\n\r\n\r\nconst jobReducer = (state: any, action: any) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ALL_JOBS:\r\n            AxiosConfig.get('jobs/')\r\n                .then(res => {\r\n                    return {\r\n                        ...state,\r\n                        jobs: res.data\r\n                    };\r\n                })\r\n                .catch(err => console.log(err));\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default jobReducer;","import React, { createContext, ReactNode, useReducer } from \"react\";\r\nimport { ActionTypes, IActionTypes } from \"../store/actions/types\";\r\nimport jobReducer from \"../store/reducers/jobReducer\";\r\n\r\ninterface initialState {\r\n    isLoading: boolean,\r\n    jobs: Array<any>\r\n}\r\n\r\nconst initialInfo = {\r\n    isLoading: false,\r\n    jobs: []\r\n};\r\n\r\nexport const JobContext = createContext<{ jobState: initialState, jobDispatch: React.Dispatch<any>, ActionTypes: IActionTypes }>({\r\n    jobState: initialInfo,\r\n    jobDispatch: () => null,\r\n    ActionTypes: ActionTypes\r\n});\r\n\r\ntype contextProps = {\r\n    children: ReactNode\r\n}\r\n\r\nexport const JobContextProvider = (props: contextProps) => {\r\n    const [jobState, jobDispatch] = useReducer(jobReducer, initialInfo);\r\n\r\n    return (\r\n        <JobContext.Provider value={\r\n            {\r\n                jobState,\r\n                jobDispatch,\r\n                ActionTypes,\r\n            }\r\n        }>\r\n            {\r\n                props.children\r\n            }\r\n        </JobContext.Provider>\r\n    )\r\n}","/* eslint-disable */\r\nimport React, { FC } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst JobItemSkeleton: FC<any> = (props: any) => {\r\n    return (\r\n        <div className=\"col-lg-4 col-md-6 col-xs-12\">\r\n            <div className=\"job-featured\">\r\n                <div className=\"icon\">\r\n                    <Skeleton circle={true} height={50} width={50}/>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h3>\r\n                        <Skeleton height={10}/>\r\n                    </h3>\r\n                    <p className=\"brand\">\r\n                        <Skeleton height={10}/>\r\n                    </p>\r\n                    <div className=\"tags\">\r\n                        <span><Skeleton height={10}/></span>\r\n                        <span><Skeleton height={10}/></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobItemSkeleton;\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport AxiosConfig from \"../AxiosConfig\";\r\nimport Header from \"../components/Header\";\r\nimport JobItem from \"../components/job/JobItem\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { JobContext } from \"../contexts/JobContext\";\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport JobItemSkeleton from \"../components/skeletons/JobItemSkeleton\";\r\nimport BaseLayout from \"../components/BaseLayout\";\r\nimport { IJob } from \"../interfaces\";\r\n\r\nconst JobsPage = () => {\r\n    const [jobs, setJobs] = useState<IJob[]>([]);\r\n    const jobContext = useContext(JobContext);\r\n    const [position, setPosition] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // const fetchData = async () => {\r\n        //     await jobContext.jobDispatch({type: jobContext.ActionTypes.ALL_JOBS});\r\n        //     console.log(jobContext.jobState)\r\n        //     setJobs(jobContext.jobState.jobs);\r\n        // };\r\n        //\r\n        // fetchData();\r\n        AxiosConfig.get('jobs/')\r\n            .then(res => {\r\n                setJobs(res.data);\r\n            })\r\n            .catch(err => setError(err));\r\n    }, []);\r\n\r\n    const onSearch: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n        <BaseLayout title={'All jobs'}>\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner-header\">\r\n                                <h3>Find your desired job</h3>\r\n                            </div>\r\n                            <div className=\"job-search-form bg-cyan job-featured-search\">\r\n                                <form>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-lg-5 col-md-5 col-xs-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <input className=\"form-control\" type=\"text\" placeholder=\"Position\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-5 col-md-5 col-xs-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <input className=\"form-control\" type=\"text\" placeholder=\"Location\"/>\r\n                                                <i className=\"lni-map-marker\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-1 col-md-1 col-xs-12\">\r\n                                            <button type=\"button\" onClick={onSearch} className=\"button\"><i className=\"lni-search\"/></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <section id=\"featured\" className=\"section bg-cyan\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            jobs.length === 0 &&\r\n                            <>\r\n                                {Array(6)\r\n                                    .fill(0)\r\n                                    .map((_, index) => (\r\n                                        <JobItemSkeleton key={index}/>\r\n                                    ))}\r\n                            </>\r\n                        }\r\n                        {\r\n                            jobs.length && jobs.map(job => {\r\n                                return <JobItem job={job} key={job.id}/>;\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </BaseLayout>\r\n    );\r\n};\r\n\r\nexport default JobsPage;\r\n","/* eslint-disable */\r\nimport React, {useContext} from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../contexts/AuthContext\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n\r\nconst GoogleSocialAuth = (props) => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const googleResponse = (response) => {\r\n\r\n        const postData = {\r\n            \"provider\": \"google-oauth2\",\r\n            \"access_token\": response.accessToken,\r\n        }\r\n        axios.post('http://127.0.0.1:8000/api/oauth/login/', postData)\r\n            .then(res => {\r\n                let decoded = jwtDecode(res.data.access);\r\n                authContext.authDispatch({\r\n                    type: authContext.ActionTypes.LOGIN,\r\n                    payload: {\r\n                        user: decoded.user || {},\r\n                        token: res.data.access,\r\n                        refreshToken: res.data.refresh,\r\n                    },\r\n                });\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <GoogleLogin\r\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n            buttonText=\"LOGIN WITH GOOGLE\"\r\n            className=\"btn btn-success\"\r\n            onSuccess={googleResponse}\r\n            onFailure={googleResponse}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GoogleSocialAuth;","import React from \"react\";\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\n\r\nconst FacebookSocialAuth = (props) => {\r\n    const fbResponse = (response) => {\r\n        console.log(response);\r\n    }\r\n\r\n    return (\r\n        <FacebookLogin\r\n            textButton=\"LOGIN WITH FACEBOOK\"\r\n            appId=\"<FACEBOOK APP ID>\"\r\n            fields=\"name,email,picture\"\r\n            callback={fbResponse}\r\n        />\r\n    );\r\n}\r\n\r\nexport default FacebookSocialAuth;","/* eslint-disable */\r\nimport React, { useState, useContext, useRef, useEffect, FC } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport AxiosConfig from \"../AxiosConfig\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { Redirect, NavLink, RouteComponentProps } from \"react-router-dom\";\r\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\r\n\r\nimport GoogleSocialAuth from \"../components/social/GoogleSocialAuth\";\r\nimport FacebookSocialAuth from \"../components/social/FacebookSocialAuth\";\r\n\r\nconst {useToasts} = require('react-toast-notifications');\r\n\r\ninterface IJwtPayload extends JwtPayload {\r\n    user: any\r\n}\r\n\r\nconst LoginPage: FC<RouteComponentProps> = ({history, location}) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const authContext = useContext(AuthContext);\r\n    const {addToast} = useToasts();\r\n    const _isMounted = useRef(true);\r\n\r\n    useEffect(() => {\r\n        return () => { // ComponentWillUnmount in Class Component\r\n            _isMounted.current = false;\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (evt) => {\r\n        evt.preventDefault();\r\n        setSubmitted(true);\r\n\r\n        if (!email && !password) {\r\n            setSubmitted(false);\r\n            alert('All fields are required');\r\n            return true;\r\n        }\r\n\r\n        const postData = {\r\n            \"email\": email,\r\n            \"password\": password\r\n        }\r\n\r\n        const loginUser = async () => {\r\n            try {\r\n                const res = await AxiosConfig.post('/auth/login/', postData);\r\n                console.log(res);\r\n                let decoded = res.data.accessToken && jwtDecode<IJwtPayload>(res.data.accessToken);\r\n                authContext.authDispatch({\r\n                    type: authContext.ActionTypes.LOGIN,\r\n                    payload: {\r\n                        user: res.data.user || {},\r\n                        token: res.data.token,\r\n                        refreshToken: res.data.refreshToken,\r\n                    },\r\n                });\r\n                addToast('Logged in successfully', {appearance: 'success', autoDismiss: true,});\r\n                setSubmitted(false);\r\n                if (_isMounted.current) {\r\n                    history.push('/');\r\n                } else {\r\n                    _isMounted.current = false\r\n                }\r\n            } catch (err) {\r\n                if (err.response && err.response.status === 401) {\r\n                    console.log(err.response);\r\n                    addToast('Login failed', {appearance: 'error', autoDismiss: true,});\r\n                }\r\n                setSubmitted(false);\r\n            }\r\n        }\r\n\r\n        loginUser().then();\r\n    }\r\n\r\n    if (redirect || authContext.state.isAuthenticated) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Helmet>\r\n                <title>Login</title>\r\n            </Helmet>\r\n\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner-header\">\r\n                                <h3>Login</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <section id=\"content\" className=\"section-padding\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-5 col-md-6 col-xs-12\">\r\n                            <div className=\"page-login-form box\">\r\n                                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <i className=\"lni-user\"/>\r\n                                            <input type=\"email\"\r\n                                                   id=\"sender-email\"\r\n                                                   className=\"form-control\"\r\n                                                   name=\"email\"\r\n                                                   placeholder=\"Email\"\r\n                                                   value={email}\r\n                                                   onChange={e => setEmail(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <i className=\"lni-lock\"/>\r\n                                            <input type=\"password\"\r\n                                                   className=\"form-control\"\r\n                                                   placeholder=\"Password\"\r\n                                                   value={password}\r\n                                                   onChange={e => setPassword(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Keep Me Signed In</label>\r\n                                    </div>\r\n                                    <button type=\"submit\" hidden={submitted} className=\"btn btn-primary log-btn\">\r\n                                        Login\r\n                                    </button>\r\n                                    <button type=\"submit\" hidden={!submitted} className=\"btn btn-primary log-btn\">\r\n                                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                                        Loading...\r\n                                    </button>\r\n                                </form>\r\n                                <ul className=\"form-links\">\r\n                                    <li className=\"text-center\"><NavLink to='/register'>Don't have an account?</NavLink></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center my-2\">\r\n                        <div className=\"col-md-4\">\r\n                            <FacebookSocialAuth/>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <GoogleSocialAuth/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","/* eslint-disable */\r\nimport React, { useState, useContext } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport AxiosConfig from \"../AxiosConfig\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\nconst {useToasts} = require(\"react-toast-notifications\");\r\n\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [password2, setPassword2] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const authContext = useContext(AuthContext);\r\n    const {addToast} = useToasts();\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (evt) => {\r\n        evt.preventDefault();\r\n        setSubmitted(true);\r\n\r\n        if (!email && !password) {\r\n            alert('All fields are required');\r\n            setSubmitted(false);\r\n            return true;\r\n        }\r\n\r\n        const postData = {\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"password2\": password2,\r\n            \"gender\": gender,\r\n            \"role\": role,\r\n            \"contactNo\": contactNumber,\r\n            \"name\": name\r\n        }\r\n\r\n        AxiosConfig.post('register/', postData)\r\n            .then(res => {\r\n                // swal(\"Good job!\", \"Successfully registered!\", \"success\");\r\n                setSubmitted(false);\r\n                addToast('Registered successfully', {appearance: 'success'});\r\n                if (res.status == 201) setRedirect(true);\r\n            })\r\n            .catch(err => {\r\n                setSubmitted(false);\r\n                addToast('Register failed', {appearance: 'error'});\r\n            });\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Helmet>\r\n                <title>Register</title>\r\n            </Helmet>\r\n\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner-header\">\r\n                                <h3>Register</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <section id=\"content\" className=\"section-padding\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-5 col-md-6 col-xs-12\">\r\n                            <div className=\"page-login-form box\">\r\n                                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <i className=\"lni-user\"/>\r\n                                            <input type=\"name\"\r\n                                                   id=\"name\"\r\n                                                   className=\"form-control\"\r\n                                                   name=\"name\"\r\n                                                   placeholder=\"Name\"\r\n                                                   value={name}\r\n                                                   onChange={e => setName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <i className=\"lni-user\"/>\r\n                                            <input type=\"email\"\r\n                                                   id=\"sender-email\"\r\n                                                   className=\"form-control\"\r\n                                                   name=\"email\"\r\n                                                   placeholder=\"Email\"\r\n                                                   value={email}\r\n                                                   onChange={e => setEmail(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <i className=\"lni-user\"/>\r\n                                            <input type=\"contactnumber\"\r\n                                                   id=\"contact-number\"\r\n                                                   className=\"form-control\"\r\n                                                   name=\"email\"\r\n                                                   placeholder=\"Contact Number\"\r\n                                                   value={contactNumber}\r\n                                                   onChange={e => setContactNumber(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <i className=\"lni-lock\"/>\r\n                                            <input type=\"password\"\r\n                                                   className=\"form-control\"\r\n                                                   placeholder=\"Password\"\r\n                                                   value={password}\r\n                                                   onChange={e => setPassword(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <i className=\"lni-lock\"/>\r\n                                            <input type=\"password\"\r\n                                                   className=\"form-control\"\r\n                                                   placeholder=\"Confirm Password\"\r\n                                                   value={password2}\r\n                                                   onChange={e => setPassword2(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <select className=\"form-control\" onChange={e => setGender(e.target.value)}>\r\n                                                <option value=\"\" defaultValue={\"\"}>Select gender</option>\r\n                                                <option value=\"male\">Male</option>\r\n                                                <option value=\"female\">Female</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <select className=\"form-control\" onChange={e => setRole(e.target.value)}>\r\n                                                <option value=\"\" defaultValue={\"\"}>Select role</option>\r\n                                                <option value=\"employee\">Employee</option>\r\n                                                <option value=\"employer\">Employer</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" hidden={submitted} className=\"btn btn-primary log-btn\">\r\n                                        Register\r\n                                    </button>\r\n                                    <button type=\"submit\" hidden={!submitted} className=\"btn btn-primary log-btn\">\r\n                                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                                        Loading...\r\n                                    </button>\r\n                                </form>\r\n                                <ul className=\"form-links\">\r\n                                    <li className=\"text-center\"><NavLink to='/login'>Already have an account?</NavLink></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;","/* eslint-disable */\r\nimport React, { FC, useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\ninterface Props {\r\n    component: React.ElementType\r\n}\r\n\r\nconst EmployerPrivateRoute: FC<any> = ({component: Component, ...rest}) => {\r\n    const authContext = useContext(AuthContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                props => {\r\n                    if (authContext.state.isLoading) {\r\n                        return <h2>Loading...</h2>\r\n                    } else if (!authContext.state.isAuthenticated) {\r\n                        return <Redirect to=\"/login\"/>\r\n                    } else if (!authContext.state.user || authContext.state.user.role != 'employer') {\r\n                        return <Redirect to=\"/\"/>\r\n                    } else {\r\n                        return <Component {...props} />;\r\n                    }\r\n                }\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default EmployerPrivateRoute;","/* eslint-disable */\r\nimport React, { useEffect, useState, Fragment, useContext, FC } from \"react\";\r\nimport BaseLayout from \"../../components/BaseLayout\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ITag } from \"../../interfaces\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\ninterface ICustomTag {\r\n    label: string\r\n    value: string | number\r\n}\r\n\r\nconst PostJobPage: FC = () => {\r\n    const [tags, setTags] = useState<ICustomTag[]>([]);\r\n    const [types, setTypes] = useState([\r\n        {\"value\": 1, \"label\": \"Full Time\"},\r\n        {\"value\": 2, \"label\": \"Part Time\"},\r\n        {\"value\": 3, \"label\": \"Internship\"},\r\n    ]);\r\n    const [categories, setCategories] = useState([\r\n        {\"value\": \"web-design\", \"label\": \"Web design\"},\r\n        {\"value\": \"graphic-design\", \"label\": \"Graphic design\"},\r\n        {\"value\": \"web-development\", \"label\": \"Web development\"},\r\n        {\"value\": \"human-resource\", \"label\": \"Human Resources\"},\r\n        {\"value\": \"support\", \"label\": \"Support\"},\r\n        {\"value\": \"android\", \"label\": \"Android Development\"},\r\n    ]);\r\n    const [submitted, setSubmitted] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [title, setTitle] = useState<string>();\r\n    const [description, setDescription] = useState<string>();\r\n    const [salary, setSalary] = useState<number>();\r\n    const [job_tags, setJobTags] = useState<ICustomTag[]>([]);\r\n    const [location, setLocation] = useState<string>();\r\n    const [type, setType] = useState<string>();\r\n    const [category, setCategory] = useState<string>();\r\n    const [last_date, setLastDate] = useState<Date>();\r\n    const [company_name, setCompanyName] = useState<string>();\r\n    const [company_description, setCompanyDescription] = useState<string>();\r\n    const [website, setWebsite] = useState<string>();\r\n    const authContext = useContext(AuthContext);\r\n    const {token, isAuthenticated} = authContext.state;\r\n    const {addToast} = useToasts();\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        AxiosConfig.get('tags/')\r\n            .then(res => {\r\n\r\n                let my_tags: ICustomTag[] = [];\r\n                res.data.forEach((tag: ITag) => my_tags.push({\"value\": tag.id, \"label\": tag.name}));\r\n                setTags(my_tags);\r\n                setLoading(false);\r\n            }).catch(err => addToast(err, {appearance: 'error'}))\r\n    }, []);\r\n\r\n    const animatedComponents = makeAnimated();\r\n\r\n    const handleSubmit: React.MouseEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n\r\n        const new_job_data = {\r\n            'title': title,\r\n            'description': description,\r\n            'tags': job_tags,\r\n            'salary': salary,\r\n            'location': location,\r\n            'type': type,\r\n            'category': category,\r\n            'last_date': last_date,\r\n            'company_name': company_name,\r\n            'company_description': company_description,\r\n            'website': website,\r\n        };\r\n\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n\r\n        AxiosConfig.post(`employer/jobs/create/`, new_job_data, config)\r\n            .then(res => {\r\n                addToast('Job were successfully posted', {appearance: 'success'});\r\n                setRedirect(true);\r\n            }).catch(err => addToast('Something went wrong!', {appearance: 'error'}));\r\n    }\r\n\r\n    const handleSkillsChange = (selectedOptions: any) => {\r\n        let my_tags: ICustomTag[] = selectedOptions.map((selected: any) => selected.value);\r\n        setJobTags([...my_tags]);\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n\r\n    return (\r\n        <BaseLayout title={'Post new job'}>\r\n\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner-header\">\r\n                                <h3>Post A Job</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <section className=\"section\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-9 col-md-12 col-xs-12\">\r\n                            <div className=\"post-job box\">\r\n                                <div className=\"text-center justify-content-center align-self-center\">\r\n                                    <Loader\r\n                                        type=\"Grid\"\r\n                                        color=\"#00BFFF\"\r\n                                        height={100}\r\n                                        width={100}\r\n                                        visible={loading}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    !loading && (\r\n                                        <Fragment>\r\n                                            <h3 className=\"job-title\">Post a new Job</h3>\r\n                                            <form className=\"form-ad\" onSubmit={handleSubmit}>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Job Title</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        onChange={event => setTitle(event.target.value)}\r\n                                                        required\r\n                                                        placeholder=\"Write job title\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Job Description</label>\r\n                                                    <textarea\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Write job description\"\r\n                                                        onChange={event => setDescription(event.target.value)}\r\n                                                        required\r\n                                                        rows={4}/>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Salary</label>\r\n                                                            <input\r\n                                                                type=\"number\"\r\n                                                                className=\"form-control\"\r\n                                                                onChange={event => setSalary(Number(event.target.value))}\r\n                                                                required\r\n                                                                placeholder=\"Salary(Optional for negotiable)\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Required skills</label>\r\n                                                            <Select\r\n                                                                closeMenuOnSelect={false}\r\n                                                                components={animatedComponents}\r\n                                                                // defaultValue={[colourOptions[4], colourOptions[5]]}\r\n                                                                isMulti\r\n                                                                options={tags}\r\n                                                                className=\"React\"\r\n                                                                classNamePrefix=\"select\"\r\n                                                                onChange={handleSkillsChange}\r\n                                                                required\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Location</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        onChange={event => setLocation(event.target.value)}\r\n                                                        required\r\n                                                        placeholder=\"e.g.London\"/>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Company</label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                onChange={event => setCompanyName(event.target.value)}\r\n                                                                required\r\n                                                                placeholder=\"Write company name\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Type</label>\r\n                                                            <div className=\"search-category-container\">\r\n                                                                <Select\r\n                                                                    className=\"React\"\r\n                                                                    classNamePrefix=\"select\"\r\n                                                                    name=\"type\"\r\n                                                                    onChange={(type: any) => setType(type.value)}\r\n                                                                    required\r\n                                                                    options={types}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Category</label>\r\n                                                    <div className=\"search-category-container\">\r\n                                                        <Select\r\n                                                            className=\"React\"\r\n                                                            classNamePrefix=\"select\"\r\n                                                            name=\"category\"\r\n                                                            onChange={(category: any) => setCategory(category.value)}\r\n                                                            required\r\n                                                            options={categories}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label\">Apply URL <span>(users will apply on your website)</span></label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                onChange={event => setWebsite(event.target.value)}\r\n                                                                required\r\n                                                                placeholder=\"Apply URL\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <label className=\"control-label\">Validity of the post</label>\r\n                                                        <Flatpickr\r\n                                                            className=\"form-control\"\r\n                                                            value={new Date()}\r\n                                                            options={{'minDate': new Date()}}\r\n                                                            required\r\n                                                            onChange={date => setLastDate(date[0])}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Company details</label>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Company name</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        required\r\n                                                        onChange={event => setCompanyName(event.target.value)}\r\n                                                        placeholder=\"Company name\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Company description</label>\r\n                                                    <textarea className=\"form-control\" required rows={6}\r\n                                                              onChange={event => setCompanyDescription(event.target.value)}\r\n                                                              placeholder=\"Company description\"/>\r\n                                                </div>\r\n                                                <button type=\"submit\" hidden={submitted} className=\"btn btn-primary log-btn\">\r\n                                                    Submit your job\r\n                                                </button>\r\n                                                <button type=\"submit\" hidden={!submitted} className=\"btn btn-primary log-btn\">\r\n                                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                                                    Submitting...\r\n                                                </button>\r\n                                            </form>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </BaseLayout>\r\n    );\r\n}\r\n\r\nexport default PostJobPage;\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect, useContext, FC } from 'react';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\nimport AxiosConfig from '../../AxiosConfig';\r\nimport Header from '../../components/Header';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst {ClapSpinner} = require(\"react-spinners-kit\");\r\nimport styled from \"styled-components\";\r\nimport { IJob } from \"../../interfaces\";\r\n\r\nconst LoadingStyle = styled.div`\r\n      h2 {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        vertical-align: center;\r\n        margin-top: 25%;\r\n      }\r\n`;\r\n\r\nconst AppliedJobsPage: FC = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [jobs, setJobs] = useState([]);\r\n    const [filtered_jobs, setFilteredJobs] = useState([]);\r\n    const authContext = useContext(AuthContext);\r\n    const {token, isAuthenticated} = authContext.state;\r\n    const [status, setStatus] = useState(\"\");\r\n    const {t} = useTranslation();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const config = {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            };\r\n\r\n            setLoading(true);\r\n            try {\r\n                const res = await AxiosConfig.get(`applied-jobs/`, config);\r\n                setJobs(res.data);\r\n                setFilteredJobs(res.data);\r\n\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n\r\n            setLoading(false);\r\n        })();\r\n    }, []);\r\n\r\n    const onFilter = (e: React.ChangeEvent<HTMLSelectElement | any>) => {\r\n        setLoading(true);\r\n        if ([\"1\", \"2\", \"3\"].includes(status.toString())) {\r\n            let filtered_jobs2 = filtered_jobs.filter((job: any) => job.applicant.status === status);\r\n            setFilteredJobs(filtered_jobs2);\r\n        } else {\r\n            setFilteredJobs(jobs);\r\n        }\r\n        setTimeout(() => setLoading(false), 1000);\r\n    }\r\n\r\n    const onClearFilter: React.MouseEventHandler<HTMLButtonElement | HTMLAnchorElement> = () => {\r\n        console.log(status);\r\n        setStatus(\"\");\r\n        setFilteredJobs(jobs);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Helmet>\r\n                <title>{t('employee:applied-jobs')}</title>\r\n            </Helmet>\r\n\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner-header\">\r\n                                <h3>{t('employee:applied-jobs')}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <section id=\"job-listings\" className=\"section\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 col-md-12 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control\" onChange={event => setStatus(event.target.value)}>\r\n                                            <option defaultValue=\"\">Select status</option>\r\n                                            <option value=\"1\">Pending</option>\r\n                                            <option value=\"2\">Accepted</option>\r\n                                            <option value=\"3\">Rejected</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <button className=\"btn btn-success\" onClick={onFilter}>Filter</button>\r\n                                        <button className=\"btn btn-primary\" onClick={onClearFilter}>Clear Filter</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {\r\n                                loading && (\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <LoadingStyle>\r\n                                                <h2>\r\n                                                    <ClapSpinner\r\n                                                        size={160}\r\n                                                        color=\"#686769\"\r\n                                                        loading={loading}\r\n                                                    />\r\n                                                </h2>\r\n                                            </LoadingStyle>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                !loading && filtered_jobs.length === 0 && (\r\n                                    <h2>No jobs found</h2>\r\n                                )\r\n                            }\r\n                            {\r\n                                !loading && filtered_jobs.length > 0 && (\r\n                                    filtered_jobs.map((job: IJob) => {\r\n                                        return (\r\n                                            <Link className=\"job-listings\" to={`/jobs/${job.id}`} key={job.id}>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-4 col-md-4 col-xs-12\">\r\n                                                        <div className=\"job-company-logo\">\r\n                                                            <img src=\"assets/img/features/img1.png\" alt=\"\"/>\r\n                                                        </div>\r\n                                                        <div className=\"job-details\">\r\n                                                            <h3>{job.title}</h3>\r\n                                                            <span className=\"company-neme\">\r\n                                                            {job.company_name}\r\n                                                        </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-2 col-md-2 col-xs-12 text-center\">\r\n                                                        {\r\n                                                            job.filled && (\r\n                                                                <span className=\"btn-open\">\r\n                                                                Position filled\r\n                                                            </span>\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            !job.filled && (\r\n                                                                <span className=\"btn-open\">\r\n                                                                Position open\r\n                                                            </span>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-2 col-md-2 col-xs-12 text-right\">\r\n                                                        <div className=\"location\">\r\n                                                            <i className=\"lni-map-marker\"/> {job.location}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-2 col-md-2 col-xs-12 text-right\">\r\n                                                        {\r\n                                                            job.type === \"1\" && (\r\n                                                                <span className=\"btn-full-time\">\r\n                                                                Full Time\r\n                                                            </span>\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            job.type === \"2\" && (\r\n                                                                <span className=\"btn-full-time\">\r\n                                                                Part Time\r\n                                                            </span>\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            job.type === \"3\" && (\r\n                                                                <span className=\"btn-full-time\">\r\n                                                                Internship\r\n                                                            </span>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        )\r\n                                    })\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AppliedJobsPage;","/* eslint-disable */\r\nimport React, { FC, useContext, useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\n\r\nconst EmployeePrivateRoute: FC<any> = ({ component: Component, ...rest }) => {\r\n    const authContext = useContext(AuthContext);\r\n\r\n    // useEffect(() => {\r\n    //     const fetchData = async () => {\r\n    //         const result = await authContext.user;\r\n            \r\n    //         console.log(result);\r\n    //     };\r\n    //     fetchData();\r\n    // }, []);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                props => {\r\n                    if (authContext.state.isLoading) {\r\n                        return <h2>Loading...</h2>\r\n                    } else if (!authContext.state.isAuthenticated) {\r\n                        return <Redirect to=\"/login\" />\r\n                    }\r\n                    else if (!authContext.state.user || authContext.state.user.role !== 'employee') {\r\n                        return <Redirect to=\"/\" />\r\n                    }\r\n                    else {\r\n                        return <Component {...props} />;\r\n                    }\r\n                }\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default EmployeePrivateRoute;","/* eslint-disable */\r\nimport React, { FC, useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\n\r\nconst {useToasts} = require('react-toast-notifications');\r\n\r\nconst EditProfilePage: FC = () => {\r\n    const {t} = useTranslation();\r\n    const [gender, setGender] = useState('');\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const authContext = useContext(AuthContext);\r\n    const {isAuthenticated, user, token, refreshToken} = authContext.state;\r\n    const {addToast} = useToasts();\r\n\r\n    useEffect(() => {\r\n        setFirstName(user.first_name);\r\n        setLastName(user.last_name);\r\n        setGender(user.gender);\r\n    }, [user.first_name, user.last_name, user.gender]);\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n\r\n        if (!first_name && !last_name && !gender) {\r\n            alert('All fields are required');\r\n            return true;\r\n        }\r\n\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n\r\n        const data = {\r\n            first_name,\r\n            last_name,\r\n            gender\r\n        };\r\n\r\n        AxiosConfig.put(`employee/profile/`, data, config)\r\n            .then(res => {\r\n                // const refresh_data = {\r\n                //     \"refresh\": refreshToken\r\n                // };\r\n                // AxiosConfig.post(`token/refresh/`, refresh_data)\r\n                //     .then(response => {\r\n                //         let decoded = jwtDecode(response.data.access);\r\n                //         authContext.authDispatch({\r\n                //             type: authContext.ActionTypes.LOGIN,\r\n                //             payload: {\r\n                //                 user: {\r\n                //                     ...user,\r\n                //                     first_name,\r\n                //                     last_name,\r\n                //                     gender\r\n                //                 },\r\n                //                 token: response.data.access,\r\n                //                 refreshToken: response.data.refresh\r\n                //             },\r\n                //         });\r\n                //     }).catch(err => console.log(err))\r\n                //     .finally(() => setSubmitted(false))\r\n                addToast('Profile updated successfully', {appearance: 'success'});\r\n            })\r\n            .catch(err => addToast(err, {appearance: 'error'}))\r\n            .finally(() => setSubmitted(false))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Helmet>\r\n                <title>{t('employee:edit-profile')}</title>\r\n            </Helmet>\r\n\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner-header\">\r\n                                <h3>{t('employee:edit-profile')}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <section id=\"job-listings\" className=\"section\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-5 col-md-6 col-xs-12\">\r\n                            <div className=\"page-login-form box\">\r\n                                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <input type=\"text\"\r\n                                                   className=\"form-control\"\r\n                                                   name=\"first_name\"\r\n                                                   placeholder=\"First name\"\r\n                                                   value={first_name}\r\n                                                   onChange={e => setFirstName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <input type=\"text\"\r\n                                                   className=\"form-control\"\r\n                                                   name=\"last_name\"\r\n                                                   placeholder=\"Last name\"\r\n                                                   value={last_name}\r\n                                                   onChange={e => setLastName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-icon\">\r\n                                            <select className=\"form-control\" onChange={e => setGender(e.target.value)} value={gender}>\r\n                                                <option value=\"\">Select gender</option>\r\n                                                <option value=\"male\">Male</option>\r\n                                                <option value=\"female\">Female</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" hidden={submitted} className=\"btn btn-primary log-btn\">\r\n                                        Update profile\r\n                                    </button>\r\n                                    <button type=\"submit\" hidden={!submitted} className=\"btn btn-primary log-btn\">\r\n                                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                                        Loading...\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditProfilePage;","/* eslint-disable */\r\nimport React, { FC, useContext, useState } from \"react\";\r\nimport {NavLink, Redirect, useHistory} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../contexts/AuthContext\";\r\n\r\ninterface Props {\r\n    children: React.ReactNode\r\n    title?: string\r\n}\r\n\r\nconst EmployerSidebarLayout: FC<Props> = ({children, title = 'Dashboard'}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {isAuthenticated, user} = authContext.state;\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleLogout = () => {\r\n        authContext.authDispatch({\r\n            type: authContext.ActionTypes.LOGOUT,\r\n            payload: {},\r\n        });\r\n\r\n        setRedirect(true);\r\n    }\r\n\r\n    const getActiveClass = (url: string) => {\r\n        return url === history.location.pathname ? 'active' : '';\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner-header\">\r\n                                <h3>{title}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div id=\"content\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                            <div className=\"right-sideabr\">\r\n                                <h4>Manage Account</h4>\r\n                                <ul className=\"list-item\">\r\n                                    <li>\r\n                                        <NavLink exact className={getActiveClass('/employer/dashboard/')} activeClassName='active'\r\n                                                 to='/employer/dashboard/'>Dashboard</NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink exact className={getActiveClass('/employer/applicants/')}\r\n                                                 to='/employer/applicants/'>Applicants</NavLink>\r\n                                    </li>\r\n                                    <li><a href=\"#!\">Change Password</a></li>\r\n                                    <li onClick={handleLogout} style={{cursor: 'pointer'}}>\r\n                                        <a>Sign Out</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EmployerSidebarLayout;","/* eslint-disable */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport EmployerSidebarLayout from \"../../components/employer-dashboard/EmployerSidebarLayout\";\r\nimport BaseLayout from \"../../components/BaseLayout\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IJob } from \"../../interfaces\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst DashboardPage = () => {\r\n    const [jobs, setJobs] = useState<IJob[]>([]);\r\n    const authContext = useContext(AuthContext);\r\n    const {token, isAuthenticated} = authContext.state;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const res = await AxiosConfig.get('employer/dashboard/', config);\r\n                setJobs(res.data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                setLoading(false);\r\n                console.log(e);\r\n            }\r\n        };\r\n\r\n        fetchJobs().then();\r\n    }, []);\r\n\r\n    const get_type = (type: string) => {\r\n        const types: any = {\r\n            \"1\": \"Full Time\",\r\n            \"2\": \"Part Time\",\r\n            \"3\": \"Internship\",\r\n        }\r\n        return types[type];\r\n    }\r\n\r\n    const get_class = (type: string) => {\r\n        const class_name: any = {\r\n            \"1\": \"Full Time\",\r\n            \"2\": \"Part Time\",\r\n            \"3\": \"Internship\",\r\n        }[type];\r\n\r\n        return class_name.toLowerCase()\r\n            .replace(/ /g, '-')\r\n            .replace(/[^\\w-]+/g, '');\r\n    }\r\n\r\n    return (\r\n        <BaseLayout title={'Dashboard'}>\r\n            <EmployerSidebarLayout>\r\n                {\r\n                    loading && (\r\n                        <div className=\"col-lg-9 col-md-9 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mx-auto\">\r\n                                    <Loader\r\n                                        type=\"Grid\"\r\n                                        color=\"#00BFFF\"\r\n                                        // style={{textAlign: 'center'}}\r\n                                        height={100}\r\n                                        width={100}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {\r\n                    !loading && (\r\n                        <div className=\"col-lg-9 col-md-9 col-xs-12\">\r\n                            <div className=\"job-alerts-item candidates\">\r\n                                <h3 className=\"alerts-title\">Manage Jobs</h3>\r\n                                <div className=\"alerts-list\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                            <p>Name</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                            <p>Type</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                            <p>Tags</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                            <p>Total candidates</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    jobs.map(job => {\r\n                                        return (\r\n                                            <React.Fragment key={job.id}>\r\n                                                <div className=\"alerts-content\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-3 col-md-5 col-xs-12\">\r\n                                                            <h3>\r\n                                                                <Link to={`/jobs/${job.id}`}>{job.title}</Link>\r\n                                                            </h3>\r\n                                                            <span className=\"location\"><i className=\"lni-map-marker\"/> {job.location}</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                                            <p><span\r\n                                                                className={get_class(String(job.type))}>{get_type(String(job.type))}</span>\r\n                                                            </p>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-3 col-md-2 col-xs-12\">\r\n                                                            <div className=\"can-img\">\r\n                                                                {\r\n                                                                    job.job_tags?.map(tag => {\r\n                                                                        return (\r\n                                                                            <span key={tag.id}\r\n                                                                                  style={{color: '#fff', backgroundColor: '#000'}}\r\n                                                                                  className=\"full-time\">{tag.name}</span>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-3 col-md-2 col-xs-12\">\r\n                                                            <p>\r\n                                                                <Link to={`/employer/applicants/${job.id}`}>\r\n                                                                    {job.total_candidates} candidates\r\n                                                                </Link>\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <br/>\r\n\r\n                                {/*<ul className=\"pagination\">*/}\r\n                                {/*    <li className=\"active\"><a href=\"#\" className=\"btn-prev\"><i className=\"lni-angle-left\"/> prev</a></li>*/}\r\n                                {/*    <li><a href=\"#\">1</a></li>*/}\r\n                                {/*    <li><a href=\"#\">2</a></li>*/}\r\n                                {/*    <li><a href=\"#\">3</a></li>*/}\r\n                                {/*    <li><a href=\"#\">4</a></li>*/}\r\n                                {/*    <li><a href=\"#\">5</a></li>*/}\r\n                                {/*    <li className=\"active\"><a href=\"#\" className=\"btn-next\">Next <i className=\"lni-angle-right\"/></a></li>*/}\r\n                                {/*</ul>*/}\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </EmployerSidebarLayout>\r\n        </BaseLayout>\r\n    )\r\n}\r\n\r\nexport default DashboardPage;","/* eslint-disable */\r\nimport React, { FC, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\nimport EmployerSidebarLayout from \"../../components/employer-dashboard/EmployerSidebarLayout\";\r\nimport BaseLayout from \"../../components/BaseLayout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { IApplicant, IUser } from \"../../interfaces\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst ApplicantsPage: FC = () => {\r\n    const [applicants, setApplicants] = useState<IApplicant[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const authContext = useContext(AuthContext);\r\n    const {token, isAuthenticated} = authContext.state;\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n\r\n        const fetchApplicants = async () => {\r\n            try {\r\n                const res = await AxiosConfig.get('/employer/applicants/', config);\r\n                setApplicants(res.data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                setLoading(false);\r\n                console.log(e);\r\n            }\r\n        };\r\n\r\n        fetchApplicants().then();\r\n    }, []);\r\n\r\n    const getFullname = (user: IUser) => `${user.first_name} ${user.last_name}`\r\n\r\n    const onUpdateApplicant = (applicant: IApplicant, type: string) => (event: React.MouseEvent) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <BaseLayout title={'Applicants'}>\r\n            <EmployerSidebarLayout title={'Applicants'}>\r\n                {\r\n                    loading && (\r\n                        <div className=\"col-lg-9 col-md-9 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mx-auto\">\r\n                                    <Loader\r\n                                        type=\"Grid\"\r\n                                        color=\"#00BFFF\"\r\n                                        // style={{textAlign: 'center'}}\r\n                                        height={100}\r\n                                        width={100}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    !loading && (\r\n                        <div className=\"col-lg-9 col-md-9 col-xs-12\">\r\n                            <div className=\"job-alerts-item candidates\">\r\n                                <h3 className=\"alerts-title\">Manage Applicants</h3>\r\n                                <div className=\"alerts-list\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                            <p>Name</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-3 col-md-5 col-xs-12\">\r\n                                            <p>Job title</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                            <p>Status</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                            <p>Applied at</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                            <p>Actions</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    applicants.map(applicant => {\r\n                                        return (\r\n                                            <React.Fragment key={applicant.id}>\r\n                                                <div className=\"alerts-content\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                                            <h3>\r\n                                                                <Link\r\n                                                                    to={`/jobs/${applicant.job.id}`}>{getFullname(applicant.applied_user)}</Link>\r\n                                                            </h3>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                                            <h3>\r\n                                                                <Link to={`/jobs/${applicant.job.id}`}>{applicant.job.title}</Link>\r\n                                                            </h3>\r\n                                                            <span className=\"location\"><i\r\n                                                                className=\"lni-map-marker\"/> {applicant.job.location}</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                                            <p>{applicant.status}</p>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                                            <p>{moment(applicant.created_at).format('DD-MM-YYYY hh:mm:ss A')}</p>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                                            {\r\n                                                                applicant.status === 'Pending' && (\r\n                                                                    <>\r\n                                                                        <button onClick={onUpdateApplicant(applicant, \"accept\")}\r\n                                                                                className=\"btn btn-primary btn-xs mr-2\">\r\n                                                                            <i className=\"fa fa-check\" aria-hidden=\"true\"/>\r\n                                                                        </button>\r\n                                                                        <button onClick={onUpdateApplicant(applicant, \"reject\")}\r\n                                                                                className=\"btn btn-danger btn-xs\">\r\n                                                                            <i className=\"fa fa-window-close\" aria-hidden=\"true\"/>\r\n                                                                        </button>\r\n                                                                    </>\r\n                                                                )\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </EmployerSidebarLayout>\r\n        </BaseLayout>\r\n    )\r\n};\r\n\r\nexport default ApplicantsPage;\r\n\r\n\r\n","/* eslint-disable */\r\nimport React, { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\nimport { IApplicant } from \"../../interfaces\";\r\n\r\ninterface Props {\r\n    show: boolean\r\n    onHide: () => any\r\n    type: string\r\n    applicant: IApplicant\r\n}\r\n\r\nconst AcceptRejectModal: FC<Props> = ({show, onHide, type, applicant}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const {token, isAuthenticated} = authContext.state;\r\n    const [comment, setComment] = useState('');\r\n    let title = '';\r\n    let variant = '';\r\n    if (type === 'accept') {\r\n        title = 'Accept the applicant';\r\n        variant = 'success';\r\n    } else if (type === 'reject') {\r\n        title = 'Reject the applicant';\r\n        variant = 'danger';\r\n    }\r\n\r\n    useEffect(() => {\r\n        setComment(applicant.comment);\r\n    }, []);\r\n\r\n    const onSubmit: React.MouseEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n\r\n        console.log(applicant);\r\n        let status_id = type === 'accept' ? 2 : 3;\r\n\r\n        const updateApplicantStatus = async () => {\r\n            try {\r\n                const res = await AxiosConfig.post(`/employer/applicants/${applicant.id}/${status_id}/update/`, {comment}, config);\r\n                if (res.status === 200) {\r\n                    applicant.status = type === 'accept' ? 'Accepted' : 'Rejected';\r\n                }\r\n                show = false;\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n\r\n        updateApplicantStatus();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <Modal.Body>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"comment\">Comment(Optional)</label>\r\n                        <textarea\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            rows={5}\r\n                            className=\"form-control\"\r\n                            onChange={(event) => setComment(event.target.value)}/>\r\n                    </div>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={onHide}>Close</Button>\r\n                    <Button type={'submit'} variant={variant}>Submit</Button>\r\n                </Modal.Footer>\r\n            </form>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default AcceptRejectModal;","/* eslint-disable */\r\nimport React, { FC, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport AxiosConfig from \"../../AxiosConfig\";\r\nimport EmployerSidebarLayout from \"../../components/employer-dashboard/EmployerSidebarLayout\";\r\nimport BaseLayout from \"../../components/BaseLayout\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport AcceptRejectModal from \"../../components/modals/AcceptRejectModal\";\r\nimport { IApplicant, IUser } from \"../../interfaces\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\ninterface MatchParams {\r\n    job_id: string;\r\n}\r\n\r\ninterface MatchProps extends RouteComponentProps<MatchParams> {\r\n}\r\n\r\nconst ApplicantsPerJobPage: FC<MatchProps> = ({match}) => {\r\n    const [applicants, setApplicants] = useState<IApplicant[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const authContext = useContext(AuthContext);\r\n    const {token, isAuthenticated} = authContext.state;\r\n    const [acceptModalShow, setAcceptModalShow] = useState(false);\r\n    const [type, setType] = useState('');\r\n    const [applicant, setApplicant] = useState<IApplicant>(Object);\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n\r\n        let job_id = match.params.job_id;\r\n\r\n        const fetchApplicants = async () => {\r\n            try {\r\n                const res = await AxiosConfig.get(`/employer/applicants/${job_id}/`, config);\r\n                setApplicants(res.data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                setLoading(false);\r\n                console.log(e);\r\n            }\r\n        };\r\n\r\n        fetchApplicants().then();\r\n    }, []);\r\n\r\n    const getFullname = (user: IUser) => `${user.first_name} ${user.last_name}`\r\n\r\n    const onUpdateApplicant = (applicant: IApplicant, type: string) => (event: React.MouseEvent) => {\r\n        setAcceptModalShow(true);\r\n        setType(type);\r\n        setApplicant(applicant);\r\n    }\r\n\r\n    return (\r\n        <BaseLayout title={'Applicants Per Job'}>\r\n            <EmployerSidebarLayout title={'Applicants Per Job'}>\r\n                {\r\n                    loading && (\r\n                        <div className=\"col-lg-9 col-md-9 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mx-auto\">\r\n                                    <Loader\r\n                                        type=\"Grid\"\r\n                                        color=\"#00BFFF\"\r\n                                        // style={{textAlign: 'center'}}\r\n                                        height={100}\r\n                                        width={100}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    !loading && (\r\n                        <div className=\"col-lg-9 col-md-9 col-xs-12\">\r\n                            <div className=\"job-alerts-item candidates\">\r\n                                <h3 className=\"alerts-title\">Manage Applicants for the job</h3>\r\n                                <div className=\"alerts-list\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                            <p>Name</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-3 col-md-5 col-xs-12\">\r\n                                            <p>Job title</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                            <p>Status</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                            <p>Applied at</p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                            <p>Actions</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    applicants.map(applicant => {\r\n                                        return (\r\n                                            <React.Fragment key={applicant.id}>\r\n                                                <div className=\"alerts-content\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                                            <h3>\r\n                                                                <Link\r\n                                                                    to={`/jobs/${applicant.job.id}`}>{getFullname(applicant.applied_user)}</Link>\r\n                                                            </h3>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-3 col-md-3 col-xs-12\">\r\n                                                            <h3>\r\n                                                                <Link to={`/jobs/${applicant.job.id}`}>{applicant.job.title}</Link>\r\n                                                            </h3>\r\n                                                            <span className=\"location\"><i\r\n                                                                className=\"lni-map-marker\"/> {applicant.job.location}</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                                            <p>{applicant.status}</p>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                                            <p>{moment(applicant.created_at).format('DD-MM-YYYY hh:mm:ss A')}</p>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-2 col-md-2 col-xs-12\">\r\n                                                            {\r\n                                                                applicant.status === 'Pending' && (\r\n                                                                    <>\r\n                                                                        <button onClick={() => onUpdateApplicant(applicant, \"accept\")}\r\n                                                                                className=\"btn btn-primary btn-xs mr-2\">\r\n                                                                            <i className=\"fa fa-check\" aria-hidden=\"true\"/>\r\n                                                                        </button>\r\n                                                                        <button onClick={() => onUpdateApplicant(applicant, \"reject\")}\r\n                                                                                className=\"btn btn-danger btn-xs\">\r\n                                                                            <i className=\"fa fa-window-close\" aria-hidden=\"true\"/>\r\n                                                                        </button>\r\n                                                                    </>\r\n                                                                )\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <AcceptRejectModal\r\n                    show={acceptModalShow}\r\n                    type={type}\r\n                    applicant={applicant}\r\n                    onHide={() => setAcceptModalShow(false)}\r\n                />\r\n            </EmployerSidebarLayout>\r\n        </BaseLayout>\r\n    )\r\n};\r\n\r\nexport default ApplicantsPerJobPage;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport JobDetailsPage from \"./pages/JobDetailsPage\";\r\nimport JobsPage from \"./pages/JobsPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport EmployerPrivateRoute from \"./commons/EmployerPrivateRoute\";\r\nimport PostJobPage from \"./pages/employer/PostJobPage\";\r\nimport AppliedJobsPage from \"./pages/employee/AppliedJobsPage\";\r\nimport EmployeePrivateRoute from \"./commons/EmployeePrivateRoute\";\r\nimport EditProfilePage from \"./pages/employee/EditProfilePage\";\r\nimport DashboardPage from \"./pages/employer/DashboardPage\";\r\nimport ApplicantsPage from \"./pages/employer/ApplicantsPage\";\r\nimport ApplicantsPerJobPage from \"./pages/employer/ApplicantsPerJobPage\";\r\n\r\nconst BaseRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={HomePage} />\r\n                <Route exact path=\"/jobs\" component={JobsPage} />\r\n                <Route exact path=\"/jobs/:id\" component={JobDetailsPage} />\r\n                <Route exact path=\"/login\" component={LoginPage} />\r\n                <Route exact path=\"/register\" component={RegisterPage} />\r\n                {/* Employer routes */}\r\n                <EmployerPrivateRoute exact path=\"/post-job/\" component={PostJobPage} />\r\n                <EmployerPrivateRoute exact path=\"/employer/dashboard/\" component={DashboardPage} />\r\n                <EmployerPrivateRoute exact path=\"/employer/applicants/\" component={ApplicantsPage} />\r\n                <EmployerPrivateRoute exact path=\"/employer/applicants/:job_id\" component={ApplicantsPerJobPage} />\r\n\r\n                {/* Employee routes */}\r\n                <EmployeePrivateRoute exact path=\"/edit-profile/\" component={EditProfilePage} />\r\n                <EmployeePrivateRoute exact path=\"/applied-jobs/\" component={AppliedJobsPage} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BaseRouter;\r\n","/* eslint-disable */\r\nimport React, { useContext, useEffect, useState, FC } from \"react\";\r\nimport { BrowserRouter as Router, useLocation } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport BaseRouter from \"./routes\";\r\nimport { AuthContext } from \"./contexts/AuthContext\";\r\nimport history from \"./history.js\";\r\n\r\nconst App: FC = () => {\r\n    const authContext = useContext(AuthContext);\r\n    const [token, setToken] = useState('');\r\n\r\n    useEffect(() => {\r\n        // let decoded = {};\r\n        // let exceptRoutes = [\"/jobs\", \"/applied-jobs\"];\r\n        // if (token) {\r\n        //     decoded = jwtDecode(token);\r\n        //     console.log(moment.unix(decoded.exp).format());\r\n        //     console.log(moment().format());\r\n        //     if (moment.unix(decoded.exp).format() < moment().format()) {\r\n        //         localStorage.clear();\r\n        //         history.push('/');\r\n        //     }\r\n        // } else {\r\n        //     if (!exceptRoutes.includes(history.location.pathname)) {\r\n        //         history.push('/');\r\n        //     }\r\n        // }\r\n        // if (decoded.user && jwtToken) {\r\n        //     setToken(jwtToken);\r\n        //     let user = decoded.user;\r\n        //     authContext.authDispatch({\r\n        //         type: authContext.ActionTypes.LOGIN,\r\n        //         payload: {\r\n        //             user,\r\n        //             token,\r\n        //         },\r\n        //     });\r\n        // }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Router>\r\n                <div\r\n                    id=\"page-container\"\r\n                    className=\"enable-page-overlay side-scroll page-header-fixed page-header-dark main-content-narrow side-trans-enabled\"\r\n                >\r\n                    <BaseRouter/>\r\n                </div>\r\n            </Router>\r\n            {/* <Spinner isLoading={isLoading}/> */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import i18n from \"i18next\";\r\nimport {initReactI18next} from \"react-i18next\";\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport common_np from \"./translations/np/common.json\";\r\nimport common_en from \"./translations/en/common.json\";\r\n\r\nimport employee_np from \"./translations/np/employee.json\";\r\nimport employee_en from \"./translations/en/employee.json\";\r\n\r\nconst Languages = [\"en\", \"np\"];\r\nconst resources = {\r\n    en: {\r\n        common: common_en,\r\n        employee: employee_en\r\n    },\r\n    np: {\r\n        common: common_np,\r\n        employee: employee_np\r\n    },\r\n}\r\n\r\nexport default i18n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: \"en\",\r\n        debug: true,\r\n        whitelist: Languages,\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n        ns: ['common', 'employee'],\r\n        // Set default namespace\r\n        defaultNS: \"common\",\r\n        resources\r\n    });","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport './App.css';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { AuthContextProvider } from \"./contexts/AuthContext\";\r\nimport { JobContextProvider } from \"./contexts/JobContext\";\r\nimport \"./i18next\"\r\n\r\nconst {ToastProvider} = require('react-toast-notifications');\r\n\r\nReactDOM.render(\r\n    <ToastProvider autoDismiss={true} autoDismissTimeout={2000}>\r\n        <AuthContextProvider>\r\n            <JobContextProvider>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <App/>\r\n                </Suspense>\r\n            </JobContextProvider>\r\n        </AuthContextProvider>\r\n    </ToastProvider>\r\n    , document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}